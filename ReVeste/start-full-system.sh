#!/bin/bash

# Script para executar o sistema completo ReVeste (Backend + Frontend)
# Autor: Manus AI
# Data: Junho 2025

echo "=============================================="
echo "    ReVeste - Sistema Completo (Full Stack)  "
echo "=============================================="

# Configurar JAVA_HOME
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64

# Verificar se o Java est√° instalado
if ! command -v java &> /dev/null; then
    echo "‚ùå Java n√£o encontrado. Instalando Java 17..."
    sudo apt-get update
    sudo apt-get install -y openjdk-17-jdk
    export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
fi

echo "‚úÖ Java configurado: $(java -version 2>&1 | head -n 1)"

# Verificar se o Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o encontrado. Por favor, instale o Node.js 18+ e tente novamente."
    exit 1
fi

echo "‚úÖ Node.js configurado: $(node -v)"

# Fun√ß√£o para compilar um servi√ßo
compile_service() {
    local service_name=$1
    echo "üî® Compilando $service_name..."
    cd $service_name
    ./mvnw clean compile -q
    if [ $? -eq 0 ]; then
        echo "‚úÖ $service_name compilado com sucesso"
    else
        echo "‚ùå Erro ao compilar $service_name"
        exit 1
    fi
    cd ..
}

# Compilar todos os microsservi√ßos
echo ""
echo "üì¶ Compilando microsservi√ßos backend..."
compile_service "user-service"
compile_service "betting-service"
compile_service "financial-simulation-service"
compile_service "behavioral-analysis-service"
compile_service "gamification-service"
compile_service "education-service"

# Compilar frontend
echo ""
echo "üé® Preparando frontend..."
cd reveste-frontend
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias do frontend..."
    pnpm install
fi
echo "‚úÖ Frontend preparado"
cd ..

echo ""
echo "üöÄ Iniciando sistema completo..."
echo "   Aguarde alguns segundos para cada servi√ßo inicializar..."

# Fun√ß√£o para iniciar um servi√ßo em background
start_service() {
    local service_name=$1
    local port=$2
    echo "üåê Iniciando $service_name na porta $port..."
    cd $service_name
    nohup ./mvnw spring-boot:run > ../logs/$service_name.log 2>&1 &
    echo $! > ../logs/$service_name.pid
    cd ..
    sleep 3
}

# Criar diret√≥rio de logs
mkdir -p logs

# Iniciar todos os microsservi√ßos
start_service "user-service" "8081"
start_service "betting-service" "8082"
start_service "financial-simulation-service" "8083"
start_service "behavioral-analysis-service" "8084"
start_service "gamification-service" "8085"
start_service "education-service" "8086"

echo ""
echo "üé® Iniciando frontend React..."
cd reveste-frontend
nohup pnpm run dev --host > ../logs/frontend.log 2>&1 &
echo $! > ../logs/frontend.pid
cd ..

echo ""
echo "‚è≥ Aguardando inicializa√ß√£o completa do sistema..."
sleep 20

echo ""
echo "üéâ Sistema ReVeste iniciado com sucesso!"
echo ""
echo "üåê FRONTEND (Interface Principal):"
echo "   ‚Ä¢ Aplica√ß√£o Web:               http://localhost:5173"
echo ""
echo "üìã BACKEND APIs (Swagger):"
echo "   ‚Ä¢ User Service:                http://localhost:8081/swagger-ui.html"
echo "   ‚Ä¢ Betting Service:             http://localhost:8082/swagger-ui.html"
echo "   ‚Ä¢ Financial Simulation:        http://localhost:8083/swagger-ui.html"
echo "   ‚Ä¢ Behavioral Analysis:         http://localhost:8084/swagger-ui.html"
echo "   ‚Ä¢ Gamification Service:        http://localhost:8085/swagger-ui.html"
echo "   ‚Ä¢ Education Service:           http://localhost:8086/swagger-ui.html"
echo ""
echo "üóÑÔ∏è  BANCOS DE DADOS H2:"
echo "   ‚Ä¢ User DB:                     http://localhost:8081/h2-console"
echo "   ‚Ä¢ Betting DB:                  http://localhost:8082/h2-console"
echo "   ‚Ä¢ Financial DB:                http://localhost:8083/h2-console"
echo "   ‚Ä¢ Behavioral DB:               http://localhost:8084/h2-console"
echo "   ‚Ä¢ Gamification DB:             http://localhost:8085/h2-console"
echo "   ‚Ä¢ Education DB:                http://localhost:8086/h2-console"
echo ""
echo "üîë Credenciais H2:"
echo "   ‚Ä¢ JDBC URL: jdbc:h2:mem:[nome]db"
echo "   ‚Ä¢ Username: sa"
echo "   ‚Ä¢ Password: password"
echo ""
echo "üìù Logs dos servi√ßos est√£o em: ./logs/"
echo ""
echo "‚ö†Ô∏è  Para parar todo o sistema, execute: ./stop-full-system.sh"
echo ""
echo "=============================================="

